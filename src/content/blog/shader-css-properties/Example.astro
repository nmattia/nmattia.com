---
import Shader from "../../../components/Shader.astro";

interface Props {
  color: "static" | "dynamic";
}

const { color } = Astro.props;

const fragShader = `

precision highp float;

varying vec2 vPosition;
uniform vec4 uColor;

void main() {
if (mod(vPosition.x + .1, .5) > .2 && mod(vPosition.y + .1,.5) > .2) {
gl_FragColor = uColor;
}
}
`;
---

{
  color === "static" ? (
    <Shader
      fragShader={fragShader}
      quadShaderSetup={(qs) => qs.uniform4f("uColor", [0, 0, 0, 1])}
    />
  ) : (
    <Shader
      fragShader={fragShader}
      quadShaderSetup={(qs, utils) => {
        qs.uniform4f("uColor", () =>
          utils.getComputedStylePropRGBA(qs.state.canvas, "color"),
        );
      }}
    />
  )
}
